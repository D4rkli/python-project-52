name: tests

on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: task_manager.settings
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DJANGO_DEBUG: "False"
      DATABASE_URL: sqlite:///$(pwd)/ci.sqlite3
      ROLLBAR_ACCESS_TOKEN: ""
      ROLLBAR_ENV: ci
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install project (dev)
        run: uv sync --all-extras --dev

      - name: Check DJANGO_SECRET_KEY presence (safe)
        run: |
          python - <<'PY'
          import os
          v = os.getenv("DJANGO_SECRET_KEY")
          print("Has DJANGO_SECRET_KEY:", bool(v), "len:", len(v) if v else 0)
          PY

      - name: Generate temp SECRET_KEY if missing
        run: |
          if [ -z "${DJANGO_SECRET_KEY}" ]; then
            echo "DJANGO_SECRET_KEY=$(python - <<'PY'
            import secrets; print('ci-'+secrets.token_urlsafe(64))
            PY
            )" >> $GITHUB_ENV
          fi

      - name: Migrate DB
        run: python manage.py migrate --noinput

      - name: Run tests with coverage
        run: pytest -q --cov=task_manager --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
