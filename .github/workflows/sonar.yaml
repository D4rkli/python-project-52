name: tests-and-sonar

on:
  push:
  pull_request:

jobs:
  tests-and-sonar:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    env:
      DJANGO_SETTINGS_MODULE: task_manager.settings
      DATABASE_URL: sqlite:////tmp/ci.sqlite3
      PYTHONPATH: ${{ github.workspace }}
      ROLLBAR_ACCESS_TOKEN: ""
      ROLLBAR_ENV: ci
      CI: "true"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install project (dev)
        run: uv sync --all-extras --dev

      - name: Ensure DJANGO_SECRET_KEY
        shell: bash
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: |
          echo "DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-ci-$(python -c 'import secrets,sys; sys.stdout.write(secrets.token_urlsafe(64))')}" >> "$GITHUB_ENV"

      - name: Migrate DB
        run: uv run python manage.py migrate --noinput

      - name: Write temp coverage config (not committed)
        run: |
          cat > .coveragerc << 'EOF'
          [run]
          branch = True
          relative_files = True
          source = task_manager

          [report]
          omit =
              */migrations/*
              */tests/*
              */venv/*
          EOF

      - name: Run tests with coverage (XML in repo root)
        run: |
          uv run pytest -q \
            --cov=task_manager \
            --cov-branch \
            --cov-report=xml:coverage.xml
          ls -l coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=D4rkli_python-project-52
            -Dsonar.organization=d4rkli
            -Dsonar.python.version=3.12
            -Dsonar.sources=task_manager
            -Dsonar.tests=tests
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.coverage.exclusions=**/tests/**
            -Dsonar.exclusions=**/migrations/**,staticfiles/**,**/*.po
            -X
