name: sonar

on:
  push:
  pull_request:

jobs:
  tests-and-sonar:
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: task_manager.settings
      DATABASE_URL: sqlite:///$(pwd)/ci.sqlite3
      ROLLBAR_ACCESS_TOKEN: ""
      ROLLBAR_ENV: ci
      PYTHONPATH: ${{ github.workspace }}

      SONAR_HOST_URL: https://sonarcloud.io
      SONAR_ORG: d4rkli
      SONAR_PROJECT_KEY: D4rkli_python-project-52

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install project (dev)
        run: uv sync --all-extras --dev

      - name: Migrate DB
        run: python manage.py migrate --noinput

      - name: Run tests with coverage
        run: |
          pytest -q --cov=task_manager --cov-report=xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.projectName=${{ github.event.repository.name }}
            -Dsonar.branch.name=${{ github.ref_name }}
            -Dsonar.python.version=3.12
            -Dsonar.sources=task_manager
            -Dsonar.tests=tests
            -Dsonar.exclusions=**/migrations/**,staticfiles/**,**/*.po
            -Dsonar.python.coverage.reportPaths=coverage.xml
