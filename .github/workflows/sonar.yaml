name: tests-and-sonar

on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: task_manager.settings
      DATABASE_URL: sqlite:////tmp/ci.sqlite3
      PYTHONPATH: ${{ github.workspace }}
      ROLLBAR_ACCESS_TOKEN: ""
      ROLLBAR_ENV: ci
      CI: "true"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install project (dev)
        run: uv sync --all-extras --dev

      - name: Ensure DJANGO_SECRET_KEY
        shell: bash
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: |
          echo "DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-ci-$(python - <<'PY'
            import secrets; print(secrets.token_urlsafe(64))
            PY
          )}" >> "$GITHUB_ENV"

      - name: Migrate DB
        run: uv run python manage.py migrate --noinput

      - name: Run tests with coverage
        run: uv run pytest -q --cov=task_manager --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  sonarcloud:
    needs: tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-xml
          path: .

      - name: Move coverage to project root (if needed)
        shell: bash
        run: |
          if [ -f coverage-xml/coverage.xml ]; then
            mv coverage-xml/coverage.xml coverage.xml
          fi
          [ -f coverage.xml ] && ls -l coverage.xml || (echo "coverage.xml not found" && exit 1)

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=D4rkli_python-project-52
            -Dsonar.organization=D4rkli
            -Dsonar.python.version=3.12
            -Dsonar.sources=task_manager
            -Dsonar.tests=tests
            -Dsonar.exclusions=**/migrations/**,staticfiles/**,**/*.po
            -Dsonar.python.coverage.reportPaths=coverage.xml
