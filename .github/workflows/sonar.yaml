name: ci

on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: task_manager.settings
      DJANGO_DEBUG: "False"
      DJANGO_SECRET_KEY: dev-ci-key
      DATABASE_URL: sqlite:///${{ github.workspace }}/ci.sqlite3
      PYTHONPATH: ${{ github.workspace }}
      ROLLBAR_ACCESS_TOKEN: ""
      ROLLBAR_ENV: ci

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install project (dev)
        run: |
          uv sync --all-extras --dev
          uv run python - <<'PY'
          import django; print("Django:", django.get_version())
          PY

      - name: Migrate DB
        run: |
          uv run python manage.py migrate --noinput --settings=task_manager.settings

      - name: Run tests with coverage
        run: |
          uv run pytest -q --ds=task_manager.settings --cov=task_manager --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  sonar:
    needs: tests
    runs-on: ubuntu-latest
    if: ${{ secrets.SONAR_TOKEN != '' }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-xml
          path: .

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=<ORG>_<REPO>
            -Dsonar.organization=<ORG>
            -Dsonar.python.version=3.12
            -Dsonar.sources=task_manager
            -Dsonar.tests=tests
            -Dsonar.exclusions=**/migrations/**,staticfiles/**,**/*.po
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.exclusions=**/migrations/**,staticfiles/**,**/*.po
            -Dsonar.python.coverage.reportPaths=coverage.xml
